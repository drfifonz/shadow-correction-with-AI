from datetime import datetime
from torchvision.utils import save_image


class Visualizer:
    """
    Visialize model's working
    """

    def __init__(self, opt) -> None:
        self.opt = opt

    def save_images(self, root_path: str, images) -> None:
        """
        saving images in /root_path/actual_date/ folder
        """
        root_folder = root_path + get_current_date_string()

        img_num = 1

        for im in images:
            img_num += 1
            save_image(im, f"/{root_folder}/image{img_num}.png")

        print("Images saved to folder: {}".format(root_folder))

    def show_image(self, root_path: str, image: str) -> None:
        """
        showing particular image generated by the model
        TODO maybe take all output from the model and parse it
        into chunks, where we show 12? or 6? images at the time
        with and without shadows. Don't really know how to do that
        """


# helper functions
def get_current_date_string() -> str:
    """
    getting current date and returning it as a string in \n
    YYYY/MM/DD-HH:MM:SS\n
    format
    """
    date = datetime.now()

    day_string = "{:4d}/{:02d}/{:2d}".format(date.year, date.month, date.day)
    hour_string = "{:02d}:{:02d}:{:02d}".format(date.hour, date.minute, date.second)

    return day_string + "-" + hour_string
